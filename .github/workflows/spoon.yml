# Workflow to rebuild Spoons automatically

name: PR

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    paths:
      - "**.lua"

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Only run this if we're on the official repo. This prevents forks from getting super confusing with commits. If you want to host you own Spoon repository, consider re-enabling this, but for your repo.
    if: github.repository == 'offbyone/Spoons'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check-out the Spoons PR
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          persist-credentials: false

      # Check-out the Hammerspoon repository we need for doc building
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          repository: Hammerspoon/hammerspoon
          path: hammerspoon
          persist-credentials: false
      - name: Install docs dependencies
        run: |
          cd $GITHUB_WORKSPACE/hammerspoon
          /usr/bin/python3 -m pip install -r requirements.txt

      # Find directories with modified files
      - uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c #v46.0.5
        id: changed-files
        with:
          files_separator: " "
          include_all_old_new_renamed_files: true
          dir_names: true
          dir_names_max_depth: 3 # Enough to capture Source/Name.spoon

      # Show modified directories, as a debug log
      - name: Show changed directories
        env:
          CHANGED_DIRS: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for dir in ${CHANGED_DIRS}; do
            echo "$dir was changed"
          done

      # Lint docstrings
      # - name: Docstrings Linter
      #   run: ./gh_actions_doclint.sh

      # Fail CI run if docstrings failed
      # - name: Check for docstring lint failures
      #   run: ./gh_actions_doclint.sh -v

      # Update docs and zips
      - name: Update docs and zips
        env:
          CHANGED_DIRS: ${{ steps.changed-files.outputs.all_changed_files }}
        run: ./scripts/gh_actions_publish.sh

      # Push changes
      - name: Push changes
        uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa #master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push'
